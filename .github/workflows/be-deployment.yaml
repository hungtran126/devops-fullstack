name: CI/CD - Build & Push to Docker Hub

on:
  push:
    branches:
      - dev
      - main
jobs:
  docker-build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -f app_api/Dockerfile  -t ${{ secrets.DOCKER_HUB_USERNAME }}/fast-api:${{ github.sha }} .
        
      - name: Push Docker image to Docker hub
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/fast-api:${{ github.sha }}
  deploy-k8s:
    needs: docker-build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        
      - name: Configuration the AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Update kube config
        run: |
          aws eks update-kubeconfig --name ${{ github.ref_name }}-${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}
      - name: Set KUBECONFIG path
        run: echo "KUBECONFIG=$HOME/.kube/config" >> $GITHUB_ENV

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.13.0
      - name: Helm Upgrade/Install
        run: |
          ENV=prod
          if [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            ENV=dev
          fi
          BASE64_ENCODED_VALUE=${{ secrets.BASE64_ENCODED_VALUE }}
          sed -i "s|TAG|${{ github.sha }}|g" app_api/k8s/my-helm/values.yaml
          sed -i "s|BASE64_ENCODED_VALUE|${BASE64_ENCODED_VALUE}|g" app_api/k8s/my-helm/values.yaml
          sed -i "s|ENV|${ENV}|g" app_api/k8s/my-helm/values.yaml

          helm upgrade --install fastapi app_api/k8s/my-helm \
            --namespace ${ENV} \
            --create-namespace \
            --values app_api/k8s/my-helm/values.yaml
      # - name: Apply the Kubernetes manifest
      #   env:
      #     ENV: ${{ github.ref }}
      #     BASE64_ENCODED_VALUE: ${{ secrets.BASE64_ENCODED_VALUE }}
      #   run: |
      #     echo "current env deploy: ${ENV}"

      #     sed -i "s|ENV|${ENV}|g" app_api/k8s/manifest.yaml
      #     sed -i "s|BASE64_ENCODED_VALUE|${BASE64_ENCODED_VALUE}|g" app_api/k8s/manifest.yaml
      #     sed -i "s|CONTAINER_REGISTRY_BASE_URI|hungtran1266/fast-api:${{ github.sha }}|g" app_api/k8s/manifest.yaml

      #     echo "Viewing the manifest file:"
      #     cat app_api/k8s/manifest.yaml

      #     echo "Deploying the manifest file:"
      #     kubectl apply -f https://github.com/cert-manager/cert-manager/releases/latest/download/cert-manager.yaml
      #     kubectl apply -f app_api/k8s/manifest.yaml
      #     kubectl rollout status deployment/app-api -n fastapi-todo-${ENV}
          
          