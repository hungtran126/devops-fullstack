name: Provision Infrastructure

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  validate_tf:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Terrascan
        id: terrascan
        uses: tenable/terrascan-action@main
        with:
          iac_type: "terraform"
          iac_version: "v14"
          policy_type: "aws"
          only_warn: true
          sarif_upload: true
          #non_recursive:
          #iac_dir:
          #policy_path:
          #skip_rules:
          #config_path:

  build:
    runs-on: ubuntu-latest
    if: always()
    needs: validate_tf
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configuration the AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          aws-region: ap-southeast-1
          role-session-name: ${{ secrets.ROLE_SESSION_NAME }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.3

      - name: Terraform Init
        run: cd app.tf && terraform init --backend-config="key=github_ci/infra/${{ github.ref_name }}-tf.tfstate"
        # run: cd app.tf && terraform init

      - name: Terraform Plan for ${{ github.ref_name }}
        if: github.event_name == 'push' && github.ref == 'refs/heads/${{ github.ref_name }}'
        # run: terraform plan -var-file=app.tf/envs/${{ github.ref_name }}.tfvars
        run: cd app.tf && terraform plan -var-file=envs/${{ github.ref_name }}.tfvars
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configuration the AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          aws-region: ap-southeast-1
          role-session-name: ${{ secrets.ROLE_SESSION_NAME }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.3

      - name: Terraform Init
        # run: terraform init --backend-config="key=github_ci/infra/${{ github.ref_name }}-tf.tfstate"
        run: cd app.tf && terraform init

      - name: Terraform Apply for ${{ github.ref_name }}
        if: github.event_name == 'push' && github.ref == 'refs/heads/${{ github.ref_name }}'
        # run: terraform apply -var-file=app.tf/envs/${{ github.ref_name }}.tfvars --auto-approve
        run: cd app.tf && terraform apply -var-file=envs/${{ github.ref_name }}.tfvars --auto-approve
